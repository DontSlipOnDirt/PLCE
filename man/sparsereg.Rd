% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subgroup.R
\name{sparsereg}
\alias{sparsereg}
\title{Sparse regression for experimental and observational data.}
\usage{
sparsereg(
  y,
  X,
  treat = NULL,
  id = NULL,
  data = NULL,
  weights = 1,
  iter = 2000,
  burnin = 2000,
  thin = 10,
  type = "linear",
  EM = FALSE,
  prior_covariance = "half-t",
  beta.init = NULL,
  unpen = NULL,
  trim.X = TRUE,
  weight.y.X = c(TRUE, TRUE),
  verbose = TRUE,
  scale.type = "none",
  formula_supplied = FALSE,
  tol = 0.001,
  blockupdate = TRUE,
  alpha.prior = "oracle",
  sparseregweights = TRUE,
  iter.initialize = 2,
  qfunction.calc = FALSE
)
}
\arguments{
\item{data}{An optional dataframe with column names matching the terms in \code{formula},
when provided.}

\item{formula}{Optional formula specification, to be used in conjunction with
\code{data} and as a substitute to the \code{y}, \code{X}, and \code{id} arguments.
See formula sections for details.}
}
\description{
Function for fitting a Bayesian LASSOplus model for sparse models with
uncertainty.
Function takes a dependent variable and an optional matrix of (pre-treatment)
covariates, or a formula and data frame.
The function \env{sparsereg} allows for estimation of a broad range of
sparse regressions.  The method allows for continuous and binary variables.
In experimental data, it can be used for subgroup analysis.
In observational data, it can be used
in place of a standard regression, especially in the presence of a large
number of variables.  The method also adjusts uncertainty estimates when
there are repeated observations through using random effects.
}
\details{
Additional arguments are used to extend the method to the nonparametric
regression setting; see \env{sparseregNP} for details.
}
\section{Formulas}{

  Formulas in sparsereg largely follow standard R regression syntax, of the form
  `y ~ X1 + X2 + ... X10`. We use lmer and brms notation to use intercept-only
  random effects, of the form `(1|group)`. We currently do not support the use of
  logs or class coercion in the formula itself, but they can be done in pre-processing.
  For finer control over the model matrix, create your own and supply them into
  the `X`, `y`, and `id` arguments.
}

